#!/usr/bin/env zsh
set -eu -o pipefail

readonly repo_dir="$( cd $(dirname ${(%):-%x})/..; pwd )"

: ${IN_PATH:="${HOME}/Code/FreeCAD"}
OUT_DIR="${HOME}/tmp/ptar-bench-out/$(date -Is)"
EXTRACT_DIR="${OUT_DIR}/extract"
: ${THREADS:=2}
: ${RUST_LOG:=ptar=debug}
: ${DELETE_OUTPUT:=true}
export RUST_LOG

(
    # build in repo root to pick up rust-toolchain file and .cargo/config.toml file.
    cd "${repo_dir}"
    cargo build --release
)

"${repo_dir}/bin/drop-caches"

echo -e "\nOUT_DIR=${OUT_DIR}"

mkdir -p "${EXTRACT_DIR}"

echo -e "\nStarting archiving with ptar"

time target/release/ptar \
         --in-path "${IN_PATH}" \
         --out-dir "${OUT_DIR}" \
         --threads "${THREADS}"

echo "Finished archiving with ptar"

"${repo_dir}/bin/drop-caches"

echo -e "\nStarting extracting"

time ls ${OUT_DIR}/*.tar.zstd \
     | xargs -I% -P${THREADS} \
           zsh -c "time zstdcat % | tar --extract -C \"${EXTRACT_DIR}\""

echo "Finished extracting"

echo -e "\nStarting diff"

# `|| true` to continue if there are differences, in particular we need to clean up.
diff -r "${IN_PATH}" "${EXTRACT_DIR}" || true

echo -e "Finished diff\n"

if [ "${DELETE_OUTPUT}" = "true" ]; then
    echo "Deleting OUT_DIR=${OUT_DIR}"
    rm -rf "${OUT_DIR}"
else
    echo "Leaving output at OUT_DIR=${OUT_DIR}"
fi
